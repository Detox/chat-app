// Generated by LiveScript 1.5.0
/**
 * @package Detox chat app
 * @author  Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @license 0BSD
 */
(function(){
  /**
   * Force passive listeners on in Polymer
   */
  var ref$;
  Polymer.setPassiveTouchGestures(true);
  /**
   * Register service worker
   */
  if ('serviceWorker' in navigator && window.detox_sw_path) {
    require(['@detox/chat']).then(function(arg$){
      var detoxChat, this$ = this;
      detoxChat = arg$[0];
      detoxChat.ready(function(){
        navigator.serviceWorker.register(detox_sw_path).then(function(registration){
          registration.onupdatefound = function(){
            var installingWorker;
            installingWorker = registration.installing;
            installingWorker.onstatechange = function(){
              switch (installingWorker.state) {
              case 'installed':
                if (navigator.serviceWorker.controller) {
                  csw.functions.notify('New application version available, refresh page or restart app to see updated version', 'success', 'right', 10);
                } else {
                  csw.functions.notify('Application is ready to work offline', 'success', 'right', 10);
                }
                break;
              case 'redundant':
                console.error('The installing service worker became redundant.');
              }
            };
          };
        })['catch'](function(e){
          console.error('Error during service worker registration:', e);
        });
      });
    });
  }
  /**
   * Requesting persistent storage, so that data will not be lost unexpectedly under storage pressure
   */
  if (((ref$ = navigator.storage) != null ? ref$.persist : void 8) != null) {
    navigator.storage.persisted().then(function(persistent){
      if (!persistent) {
        console.info('Persistent storage is not yet granted, requesting...');
        navigator.storage.persist().then(function(granted){
          if (granted) {
            console.info('Persistent storage granted');
          } else {
            console.warn('Persistent storage denied, data may be lost under storage pressure');
          }
        });
      }
    });
  } else {
    console.warn('Persistent storage not supported, data may be lost under storage pressure');
  }
}).call(this);
